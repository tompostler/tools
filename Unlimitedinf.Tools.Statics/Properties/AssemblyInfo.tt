<#@ template hostspecific="true" language="C#" #>
<#@ import namespace="System" #>
<#@ assembly name="System.Xml.dll" #>  
<#@ import namespace="System.Xml" #>
//
// This code was generated by a tool. Any changes made manually will be lost the next time this code is regenerated.
//

using System.Resources;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System;

// General Information about an assembly is controlled through the following set of attributes. Change these attribute
// values to modify the information associated with an assembly.
[assembly: AssemblyDescription("A collection of tools I have found useful across more than one C# project.")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("UnlimitedInf")]
[assembly: AssemblyCopyright("Copyright © UnlimitedInf (Tom Postler) 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]

// Setting ComVisible to false makes the types in this assembly not visible to COM components. If you need to access a
// type in this assembly from COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]
[assembly: CLSCompliant(true)]

[assembly: NeutralResourcesLanguage("en")]
[assembly: InternalsVisibleTo("Unlimitedinf.Tools.UnitTests")]

<#
	using (XmlReader reader = XmlReader.Create(this.Host.ResolvePath("..\\..\\Version.xml")))
    {
        reader.MoveToContent();
        while (reader.Read())
            if (reader.NodeType == XmlNodeType.Element && reader.Name == "Version")
                this.NuVersion = reader.ReadElementContentAsString();
    }
	if (this.NuVersion.Contains("-"))
		this.NuVersion = this.NuVersion.Split('-')[0];
	if (this.NuVersion.Contains("+"))
		this.NuVersion = this.NuVersion.Split('+')[0];
#>
[assembly: AssemblyVersion("<#= this.NuVersion #>.<#= this.Prerelease #>")]
<#+
	// Default to 0.0.0
	string NuVersion = "0.0.0";
	// Set the last version to the number of days since I last updated the datestamp * 100
	//	Plus the distance through today in hundredths
	int Prerelease = ((DateTime.Now.Year - 2017) * 366 + DateTime.Now.DayOfYear - new DateTime(2017, 2, 12).DayOfYear) * 100
					 + (int)((DateTime.Now - DateTime.Today).TotalMinutes / 14.4);
#>
